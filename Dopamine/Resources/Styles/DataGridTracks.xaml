<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Dopamine.Converters"
                    xmlns:pc="clr-namespace:Dopamine.Controls"
                    xmlns:utils="clr-namespace:Dopamine.Utils">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Dopamine;component/Resources/Styles/FontStyles.xaml" />
        <ResourceDictionary Source="/Dopamine;component/Resources/Styles/ScrollBar.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:BooleanToCollapsedConverter x:Key="BooleanToCollapsedConverter" />
    <converters:AddEllipsisConverter x:Key="AddEllipsisConverter" />

    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{DynamicResource Color_SoftWhite}"/>

    <!-- ContextMenu -->
    <ContextMenu x:Key="DataGridTracksContextMenu">
        <ContextMenu.Resources>
            <utils:BindingProxy x:Key="ColumnsProxy" Data="{DynamicResource Language_Columns}"/>
            <utils:BindingProxy x:Key="NewPlaylistProxy" Data="{DynamicResource Language_New_Playlist}"/>
            <CollectionViewSource x:Key="PlaylistsDataSource" Source="{Binding DataContext.ContextMenuPlaylists, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        </ContextMenu.Resources>
        
        <MenuItem Header="{Binding Source={StaticResource ColumnsProxy}, Path=Data, Converter={StaticResource AddEllipsisConverter}}" Command="{Binding DataContext.ChooseColumnsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_View_In_Explorer}" InputGestureText="{DynamicResource Language_Ctrl_E}" Command="{Binding ViewInExplorerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Jump_To_Playing_Song}" InputGestureText="{DynamicResource Language_Ctrl_J}" Command="{Binding JumpToPlayingTrackCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Separator/>
        <MenuItem
            InputGestureText="" 
            Command="{Binding DataContext.EditTracksCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource Language_Edit}"/>
                    <pc:SyncRing Width="11" Margin="15,0,0,0" VerticalAlignment="Center" Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Play_Selected}" InputGestureText="" Command="{Binding DataContext.PlaySelectedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Play_Next}" InputGestureText="" Command="{Binding DataContext.PlayNextCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Add_To_Now_Playing}" InputGestureText="" Command="{Binding DataContext.AddTracksToNowPlayingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <MenuItem Header="{DynamicResource Language_Add_To_Playlist}" DisplayMemberPath="Name">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Command" Value="{Binding DataContext.AddTracksToPlaylistCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                    <Setter Property="CommandParameter" Value="{Binding Name}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemsSource>
                <CompositeCollection>
                    <MenuItem Header="{Binding Source={StaticResource NewPlaylistProxy}, Path=Data, Converter={StaticResource AddEllipsisConverter}}"/>
                    <Separator/>
                    <CollectionContainer Collection="{Binding Source={StaticResource PlaylistsDataSource}}"/>
                </CompositeCollection>
            </MenuItem.ItemsSource>
            <MenuItem.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </MenuItem.ItemsPanel>
            <MenuItem.Template>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <MenuItem Header="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}" DisplayMemberPath="Name">
                            <MenuItem.ItemsSource>
                                <CompositeCollection>
                                    <Separator/>
                                </CompositeCollection>
                            </MenuItem.ItemsSource>
                        </MenuItem>
                        <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="Right" AllowsTransparency="True" PopupAnimation="Fade" HorizontalOffset="-23">
                            <Border BorderBrush="Transparent" BorderThickness="8,10,5,10" Background="White">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="8" Opacity="0.6" ShadowDepth="0" />
                                </Border.Effect>
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </MenuItem.Template>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Search_Online}" ItemsSource="{Binding DataContext.ContextMenuSearchProviders, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" DisplayMemberPath="Name" IsEnabled="{Binding DataContext.HasContextMenuSearchProviders, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Foreground" Value="{DynamicResource Brush_ContextMenuText}" />
                    <Setter Property="Command" Value="{Binding DataContext.SearchOnlineCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                    <Setter Property="CommandParameter" Value="{Binding Id}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
        <Separator/>
        <MenuItem 
            InputGestureText="{DynamicResource Language_Key_Del}" 
            Command="{Binding DataContext.RemoveSelectedTracksCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource Language_Remove}"/>
                    <pc:SyncRing Width="11" Margin="15,0,0,0" VerticalAlignment="Center" Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <MenuItem>
            <MenuItem.Command>
                <Binding Path="DataContext.RemoveSelectedTracksFromDiskCommand" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>
            </MenuItem.Command>
            <MenuItem.Visibility>
                <Binding Path="DataContext.ShowRemoveFromDisk" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}" Converter="{StaticResource BooleanToCollapsedConverter}" UpdateSourceTrigger="PropertyChanged" Mode="OneWay"/>
            </MenuItem.Visibility>
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource Language_Remove_From_Disk}"/>
                    <pc:SyncRing Width="11" Margin="15,0,0,0" VerticalAlignment="Center" Visibility="{Binding DataContext.IsIndexing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Add_To_Blacklist}" InputGestureText="" Command="{Binding DataContext.AddToBlacklistCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Separator/>
        <MenuItem Header="{DynamicResource Language_Information}" InputGestureText="" Command="{Binding DataContext.ShowSelectedTrackInformationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
    </ContextMenu>

    <!-- DataGrid -->
    <Style TargetType="{x:Type pc:DataGridEx}">
        <Setter Property="RowBackground" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:DataGridEx}">
                    <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Template="{StaticResource DataGridScrollViewerTemplate}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridRow -->
    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="ContextMenu" Value="{StaticResource DataGridTracksContextMenu}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush_ItemSeparator}" />
        <Setter Property="Height" Value="32" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource Brush_ItemHovered}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush_ItemSelected}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DataGridCell -->
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="10,0,10,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellPrimaryWithEllipsis" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Name="DataGridCellBorder">
                        <ContentControl Content="{TemplateBinding Content}">
                            <ContentControl.ContentTemplate>
                                <DataTemplate>
                                    <Border HorizontalAlignment="Stretch" Background="#00000000">
                                        <TextBlock 
                                            VerticalAlignment="Center"
                                            Margin="10,0,10,0" Background="Transparent" TextTrimming="CharacterEllipsis" 
                                            Height="auto" Width="auto" Text="{Binding Text}" ToolTip="{Binding Text}"
                                            Foreground="{DynamicResource Brush_PrimaryText}"/>
                                    </Border>
                                </DataTemplate>
                            </ContentControl.ContentTemplate>
                        </ContentControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellSecondaryWithEllipsis" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Name="DataGridCellBorder">
                        <ContentControl Content="{TemplateBinding Content}">
                            <ContentControl.ContentTemplate>
                                <DataTemplate>
                                    <Border HorizontalAlignment="Stretch" Background="#00000000">
                                        <TextBlock 
                                            VerticalAlignment="Center"
                                            Margin="10,0,10,0" Background="Transparent" TextTrimming="CharacterEllipsis" 
                                            Height="auto" Width="auto" Text="{Binding Text}" ToolTip="{Binding Text}"
                                            Foreground="{DynamicResource Brush_SecondaryText}"/>
                                    </Border>
                                </DataTemplate>
                            </ContentControl.ContentTemplate>
                        </ContentControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataGridColumnHeader -->
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush_SecondaryText}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Margin" Value="10,0,10,15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter/>
                        <Grid Margin="5,5,0,0">
                            <TextBlock 
                                x:Name="ArrowUp" 
                                Text="&#xE010;"
                                Style="{StaticResource SegoeAssets}"
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center" 
                                Foreground="{TemplateBinding Foreground}" 
                                FontSize="12" 
                                Visibility="Hidden"/>
                            <TextBlock 
                                x:Name="ArrowDown" 
                                Text="&#xE011;" 
                                Style="{StaticResource SegoeAssets}"
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center" 
                                Foreground="{TemplateBinding Foreground}" 
                                FontSize="12" 
                                Visibility="Hidden"/>
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="ArrowUp" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="ArrowDown" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter Property="Foreground" Value="{DynamicResource Brush_Accent}"/>
                            <Setter TargetName="ArrowUp" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ArrowDown" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter Property="Foreground" Value="{DynamicResource Brush_Accent}"/>
                            <Setter TargetName="ArrowUp" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="ArrowDown" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
