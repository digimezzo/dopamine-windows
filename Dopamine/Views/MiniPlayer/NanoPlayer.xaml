<baseviews:MiniPlayerViewBase x:Class="Dopamine.Views.MiniPlayer.NanoPlayer"
                              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                              xmlns:corebase="clr-namespace:Dopamine.Core.Base;assembly=Dopamine.Core"
                              xmlns:utils="clr-namespace:Dopamine.Utils"
                              xmlns:commonviews="clr-namespace:Dopamine.Views.Common"
                              xmlns:baseviews="clr-namespace:Dopamine.Views.Common.Base"
                              xmlns:cp="clr-namespace:Dopamine.Core.Prism;assembly=Dopamine.Core"
                              xmlns:prismMvvm="clr-namespace:Prism.Mvvm;assembly=Prism.Wpf"
                              mc:Ignorable="d"
                              d:DesignHeight="300" d:DesignWidth="300"
                              prismMvvm:ViewModelLocator.AutoWireViewModel="True"
                              Background="{DynamicResource Brush_WindowHeaderBackground}">

    <baseviews:MiniPlayerViewBase.Resources>
        <CollectionViewSource x:Key="PlaylistsDataSource" Source="{Binding DataContext.ContextMenuPlaylists, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
        <Storyboard x:Key="FadeIn">
            <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" From="0.5" To="1" Duration="0:0:0.15" />
            </Storyboard>
        </Storyboard>
        <Storyboard x:Key="FadeOut">
            <Storyboard>
                <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" From="1" To="0.5" Duration="0:0:0.15" />
            </Storyboard>
        </Storyboard>
        <Storyboard x:Key="ShowPlaybackInfoControls">
            <Storyboard>
                <DoubleAnimation Storyboard.TargetName="PlaybackInfoControls" Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" From="0" To="1" Duration="0:0:0.15" />
            </Storyboard>
        </Storyboard>
        <Storyboard x:Key="HidePlaybackInfoControls">
            <Storyboard>
                <DoubleAnimation Storyboard.TargetName="PlaybackInfoControls" Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" From="1" To="0" Duration="0:0:0.15" />
            </Storyboard>
        </Storyboard>
    </baseviews:MiniPlayerViewBase.Resources>

    <baseviews:MiniPlayerViewBase.ContextMenu>
        <ContextMenu>
            <ContextMenu.Resources>
                <utils:BindingProxy x:Key="NewPlaylistProxy" Data="{DynamicResource Language_New_Playlist}"/>
            </ContextMenu.Resources>
            <MenuItem Header="{DynamicResource Language_Always_On_Top}" InputGestureText="" Command="{x:Static cp:ApplicationCommands.ToggleMiniPlayerAlwaysOnTopCommand}" IsCheckable="True" IsChecked="{Binding IsMiniPlayerAlwaysOnTop,Mode=OneWay}"/>
            <MenuItem Header="{DynamicResource Language_Lock_Position}" InputGestureText="" Command="{x:Static cp:ApplicationCommands.ToggleMiniPlayerPositionLockedCommand}" IsCheckable="True" IsChecked="{Binding IsMiniPlayerPositionLocked,Mode=OneWay}"/>
            <Separator/>
            <MenuItem Header="{DynamicResource Language_Cover_Player}" InputGestureText="" Command="{x:Static cp:ApplicationCommands.ChangePlayerTypeCommand}" CommandParameter="1" IsCheckable="True" IsChecked="{Binding IsCoverPlayerChecked,Mode=OneWay}"/>
            <MenuItem Header="{DynamicResource Language_Micro_Player}" InputGestureText="" Command="{x:Static cp:ApplicationCommands.ChangePlayerTypeCommand}" CommandParameter="2" IsCheckable="True" IsChecked="{Binding IsMicroPlayerChecked,Mode=OneWay}"/>
            <MenuItem Header="{DynamicResource Language_Nano_Player}" InputGestureText="" Command="{x:Static cp:ApplicationCommands.ChangePlayerTypeCommand}" CommandParameter="3" IsCheckable="True" IsChecked="{Binding IsNanoPlayerChecked,Mode=OneWay}"/>
            <Separator/>
            <MenuItem Header="{DynamicResource Language_Add_To_Playlist}" DisplayMemberPath="Name">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Command" Value="{Binding DataContext.AddPlayingTrackToPlaylistCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                        <Setter Property="CommandParameter" Value="{Binding Name}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
                <MenuItem.ItemsSource>
                    <CompositeCollection>
                        <MenuItem Header="{Binding Source={StaticResource NewPlaylistProxy}, Path=Data, Converter={StaticResource AddEllipsisConverter}}"/>
                        <Separator/>
                        <CollectionContainer Collection="{Binding Source={StaticResource PlaylistsDataSource}}"/>
                    </CompositeCollection>
                </MenuItem.ItemsSource>
                <MenuItem.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </MenuItem.ItemsPanel>
                <MenuItem.Template>
                    <ControlTemplate TargetType="MenuItem">
                        <Grid>
                            <MenuItem Header="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}" DisplayMemberPath="Name">
                                <MenuItem.ItemsSource>
                                    <CompositeCollection>
                                        <Separator/>
                                    </CompositeCollection>
                                </MenuItem.ItemsSource>
                            </MenuItem>
                            <Popup IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="Right" AllowsTransparency="True" PopupAnimation="Fade" HorizontalOffset="-23">
                                <Border BorderBrush="Transparent" BorderThickness="8,10,5,10" Background="White">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="8" Opacity="0.6" ShadowDepth="0" />
                                    </Border.Effect>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </MenuItem.Template>
            </MenuItem>
        </ContextMenu>
    </baseviews:MiniPlayerViewBase.ContextMenu>

    <Grid x:Name="PlayerPanel" Width="{x:Static corebase:Constants.NanoPlayerWidth}" Height="{x:Static corebase:Constants.NanoPlayerHeight}">
        <StackPanel Orientation="Horizontal" Panel.ZIndex="0" Height="44" VerticalAlignment="Top">
            <commonviews:NanoPlayerControls Margin="10,1,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <Grid>
                <!-- PlaybackInfo controls -->
                <DockPanel x:Name="PlaybackInfoControls" Panel.ZIndex="1" Opacity="0" VerticalAlignment="Top">
                    <Grid>
                        <Border Panel.ZIndex="0" Height="44" Width="66" HorizontalAlignment="Right" Background="{DynamicResource Brush_NanoPlayerWindowControlsBackground}"/>
                        <commonviews:WindowControls Panel.ZIndex="1" ButtonHeight="22" ButtonWidth="22" EnableHighContrast="False"
                                                    HorizontalAlignment="Right" VerticalAlignment="Top"/>
                    </Grid>
                </DockPanel>
                <commonviews:PlaybackInfoControlNano Panel.ZIndex="0" Width="220" Margin="15,0,15,0" HorizontalAlignment="Left"/>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Grid.MouseEnter">
                        <BeginStoryboard Storyboard="{StaticResource ShowPlaybackInfoControls}"/>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Grid.MouseLeave">
                        <BeginStoryboard Storyboard="{StaticResource HidePlaybackInfoControls}"/>
                    </EventTrigger>
                </Grid.Triggers>
            </Grid>
        </StackPanel>
        <commonviews:ProgressControlsThin DockPanel.Dock="Bottom" Panel.ZIndex="1" Height="16" Margin="0" VerticalAlignment="Bottom"/>
    </Grid>
</baseviews:MiniPlayerViewBase>
